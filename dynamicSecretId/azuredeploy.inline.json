{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vaultName": {
            "type": "string"
        },
        "secretName": {
            "type": "string"
        },
        "vaultResourceGroupName": {
            "type": "string"
        }
    },
    "variables": {
    },
    "resources": [
        {
            "apiVersion": "2017-05-10",
            "name": "fetchSecret",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "expressionEvaluationOptions": {
                    "scope": "inner"
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "secretValue": {
                            "type": "securestring"
                        }
                    },
                    "resources": [
                    ],
                    "outputs": {
                        // Never put a secret in an output in practice, it's no longer secret if you do
                        // I just didn't want to spin up a resource for the sample...
                        "secretValueOutput": { 
                            "type": "string",
                            "value": "[parameters('secretValue')]"
                        }
                    }
                },
                "parameters": {
                    "secretValue": {
                        "reference": {
                            "keyVault": {
                                "id": "[resourceId(parameters('vaultResourceGroupName'), 'Microsoft.KeyVault/vaults', parameters('vaultName'))]"
                            },
                            "secretName": "[parameters('secretName')]"
                        }
                    }
                }
            }
        }
    ]
}